class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        std::vector<int> result;
        
        int i{0},j{0};
        
        while(i<nums1.size() and j<nums2.size())
        {
            if(nums1[i]<nums2[j])
            {
                result.push_back(nums1[i]);
                ++i;
            }
            else
            {
                result.push_back(nums2[j]);
                ++j;
            }
        }
        
        while(i<nums1.size())
        {
            result.push_back(nums1[i]);
            ++i;
        }
        
        while(j<nums2.size())
        {
            result.push_back(nums2[j]);
            ++j;
        }
        double medianRes {};
        if(result.size() & 1)
        {
            medianRes = result[(result.size())/2];
        }
        else
        {
            int index = (result.size())/2 ;
            
            medianRes = static_cast<double>(result[index] + result[index-1])/2;
        }
            
        return medianRes;
    }
};
