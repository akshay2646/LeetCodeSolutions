/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *resHead{new ListNode(0)}, *p{l1}, *q{l2}, *cur{resHead};
        int sum{0},carry{0};
        while(p!=nullptr || q!=nullptr)
        {
            int x = (p!=nullptr)?p->val:0;
            int y = (q!=nullptr)?q->val:0;
            sum = carry + x + y;
            carry = sum / 10;
            cur->val = sum % 10;
            if(p!=nullptr) p=p->next;
            if(q!=nullptr) q=q->next;
            if(p!=nullptr || q!=nullptr)
            {
               cur->next = new ListNode(0);
               cur = cur->next;
            }
        }
        if(carry)
            cur->next = new ListNode(carry);
        return resHead;
        
    }
};
